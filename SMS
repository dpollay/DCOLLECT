/* REXX                                                               */

/***********************************************************/
/* INITIALIZE VARIABLES                                    */
/***********************************************************/
OUT_COUNT = 0
TOT_ALLOC_KB = 0
SMS_ALLOC_KB = 0
TOT_AVAIL_KB = 0
SMS_AVAIL_KB = 0
STG_ALLOC_KB. = 0
STG_AVAIL_KB. = 0
NONSMS_ALLOC_KB = 0
NONSMS_AVAIL_KB = 0
VOLSER = '      '
TARGET.  = '   '
TRIGGER. = '   '
TARGET_STG.  = '   '
TRIGGER_STG. = '   '
STGRP_NAMES    = ' '

/***********************************************************/
/* PROCESS THE INPUT FILE (CONTAINING DCOLLECT V RECORDS)  */
/***********************************************************/
TRACE N
INNAME = "'SYSDJP.DCOLLECT.PARSED.RECTYPV'"
"ALLOC DD(INFILE) DA("INNAME") SHR"
IF RC¬= 0 THEN DO
  SAY  'ALLOCATION OF ('INNAME') FAILED'
  EXIT 8
  END
"EXECIO * DISKR INFILE (FINIS STEM RECORD."

/***********************************************************/
/* PROCESS EACH V RECORD UNTIL END-OF-FILE REACHED         */
/***********************************************************/
PROCESSV:
 DO K = 1 TO RECORD.0
    PARSE VAR RECORD.K 1 . 5 DCURCTYP 7 DCUVERS 9 DCUSYSID,
       13 DCUTIME 17 DCUDATE 21 .
    PARSE VAR RECORD.K 1 . 25 DCVVOLSR 31 DCVFLAG1,
       32 DCVERROR 33 . 36 DCVPERCT 37 DCVFRESP 41 DCVALLOC,
       45 DCVVLCAP 49 DCVFRAGI 53 DCVLGEXT 57 DCVFREXT 61 DCVFDSCB,
       65 DCFVIRS 69 DCVDVTYP 77 DCVDVNUM 79 . 83 DCVSGTCL 91 .
    DATE = LEFT(C2X(DCUDATE),7)
    /* INSERT RUN DATE INTO HEADER OF OUTFILE */
    IF K=1 THEN DO
       OUT_COUNT = OUT_COUNT + 1
       OUT_LINE.OUT_COUNT = "DCOLLECT RUN ON:" DATE
       END
    VOLSER = DCVVOLSR
    /* CHECK IF SMS MANAGED ('03'X = '03'X) */
    IF BITAND(DCVFLAG1,'03'X) = '03'X  THEN DO
       /* SUM IT UP IF IT IS */
       SMS_ALLOC_KB = SMS_ALLOC_KB + C2D(DCVALLOC)
       SMS_AVAIL_KB = SMS_AVAIL_KB + C2D(DCVVLCAP)
       IF DCVSGTCL = '        ' THEN DCVSGTCL = 'NO_GROUP'
       END
    SELECT
       WHEN SUBSTR(VOLSER,1,2) = 'ML' THEN
         TARGTRIG = (TARGET.VOLSER||"/"||TRIGGER.VOLSER)
       WHEN DCVSGTCL = '      ' | DCVSGTCL = 'NO_GROUP' THEN
         TARGTRIG = '  '
       OTHERWISE
         TARGTRIG = (TARGET.VOLSER||"/"||TRIGGER.VOLSER)
    END
    /* GRAB STORAGE GROUP NAMES AND SAVE TO STGRP_NAMES */
    IF DCVSGTCL \= '      ' THEN DO
       IF WORDPOS(DCVSGTCL,STGRP_NAMES,1) = 0 THEN DO
          STGRP_NAMES = STGRP_NAMES DCVSGTCL
          L = WORDPOS(DCVSGTCL,STGRP_NAMES,1)
          TARGET_STG.L = TARGET.DCVVOLSR
          TRIGGER_STG.L = TRIGGER.DCVVOLSR
          END
       L = WORDPOS(DCVSGTCL,STGRP_NAMES,1)
       STG_ALLOC_KB.L = STG_ALLOC_KB.L + C2D(DCVALLOC)
       STG_AVAIL_KB.L = STG_AVAIL_KB.L + C2D(DCVVLCAP)
       END
    ELSE DO
       NONSMS_ALLOC_KB = NONSMS_ALLOC_KB + C2D(DCVALLOC)
       NONSMS_AVAIL_KB = NONSMS_AVAIL_KB + C2D(DCVVLCAP)
       END
    /* BUILD TOTALS */
    TOT_ALLOC_KB = TOT_ALLOC_KB + C2D(DCVALLOC)
    TOT_AVAIL_KB = TOT_AVAIL_KB + C2D(DCVVLCAP)
    DCVVLCAP = FORMAT(((C2D(DCVVLCAP))/1024),8,2)
    DCVALLOC = FORMAT(((C2D(DCVALLOC))/1024),8,2)
  END
 /* OPEN THE OUTPUT FILE FOR THE SUMMARIZED BY SMS REPORT  */
 /*OUTNAME = "'SYSDJP.DCOLLECT.REPORTS.SMS.D"||DATE||"'"*/
 OUTNAME = "'SYSDJP.DCOLLECT.REPORTS.SMS.REPORT'"
 "ALLOC DSNAME("||OUTNAME||")",
     "DSORG(PS) LRECL(80) RECFM(F B) ",
     "TRACKS SPACE(4,5) RELEASE DDNAME(OUTDD)"
  IF RC¬= 0 THEN DO
     SAY  'ALLOC OF ('||OUTNAME||') FAILED'
     EXIT 12
     END
 /* GATHER DATA */
 CALL OUTHEADS
 CALL OUTSMS
 /* WRITE DATA TO REPORT FILE */
 "EXECIO * DISKW OUTDD (FINIS STEM OUT_LINE."
 "FREE ALL"
EXIT

/* PRINT OUT SMS HEADERS */
OUTHEADS:
  OUT_COUNT = OUT_COUNT + 1
  OUT_LINE.OUT_COUNT = LEFT("----",80,"-")
  OUT_COUNT = OUT_COUNT + 1
  OUT_LINE.OUT_COUNT = CENTER("    ",7),
      LEFT("      ",8),
      RIGHT("     ",6),
      RIGHT("CAPACITY",12),
      RIGHT("ALLOCATED",12),
      CENTER("PERCENT",9),
      CENTER("TARGET/",7)
  OUT_COUNT = OUT_COUNT + 1
  OUT_LINE.OUT_COUNT = CENTER("    ",7),
      LEFT("      ",8),
      RIGHT("     ",6),
      RIGHT("IN MBYTES",12),
      RIGHT("IN MBYTES",12),
      CENTER("ALLOCATED",9),
      CENTER("TRIGGER",7)
RETURN

/* WRITE DATA INTO FILE */
OUTSMS:
  /* DATA BY STORAGE GROUP NAME */
  L = WORDS(STGRP_NAMES)
  DO K = 1 TO L
     PRCNT_ALC = FORMAT(((STG_ALLOC_KB.K/STG_AVAIL_KB.K)*100),3,1)
     OUT_COUNT = OUT_COUNT + 1
     STG_AVAIL_MB.K = FORMAT((STG_AVAIL_KB.K/1024),12,2)
     STG_ALLOC_MB.K = FORMAT((STG_ALLOC_KB.K/1024),12,2)
     OUT_LINE.OUT_COUNT = CENTER('  ',7),
         RIGHT(WORD(STGRP_NAMES,K),8),
         LEFT("   ",6),
         RIGHT(STG_AVAIL_MB.K,12),
         RIGHT(STG_ALLOC_MB.K,12),
         RIGHT(PRCNT_ALC,9),
         CENTER(TARGET_STG.K||"/"||TRIGGER_STG.K,7)
  END
  /* TOTALS FOR SMS */
  PRCNT_ALC = FORMAT(((SMS_ALLOC_KB/SMS_AVAIL_KB)*100),3,1)
  OUT_COUNT = OUT_COUNT + 1
  SMS_AVAIL_MB = FORMAT((SMS_AVAIL_KB/1024),12,2)
  SMS_ALLOC_MB = FORMAT((SMS_ALLOC_KB/1024),12,2)
  OUT_LINE.OUT_COUNT = CENTER('  ',7),
      RIGHT("SMS",8),
      LEFT("    ",6),
      RIGHT(SMS_AVAIL_MB,12),
      RIGHT(SMS_ALLOC_MB,12),
      RIGHT(PRCNT_ALC,9)
  /* TOTALS FOR NON-SMS */
  PRCNT_ALC = FORMAT(((NONSMS_ALLOC_KB/NONSMS_AVAIL_KB)*100),3,1)
  OUT_COUNT = OUT_COUNT + 1
  NONSMS_AVAIL_MB = FORMAT((NONSMS_AVAIL_KB/1024),12,2)
  NONSMS_ALLOC_MB = FORMAT((NONSMS_ALLOC_KB/1024),12,2)
  OUT_LINE.OUT_COUNT = CENTER('  ',7),
      RIGHT("NON-SMS",8),
      LEFT("    ",6),
      RIGHT(NONSMS_AVAIL_MB,12),
      RIGHT(NONSMS_ALLOC_MB,12),
      RIGHT(PRCNT_ALC,9)
  /* TOTALS */
  PRCNT_ALC = FORMAT(((TOT_ALLOC_KB/TOT_AVAIL_KB)*100),3,1)
  OUT_COUNT = OUT_COUNT + 1
  TOT_AVAIL_MB = FORMAT((TOT_AVAIL_KB/1024),12,2)
  TOT_ALLOC_MB = FORMAT((TOT_ALLOC_KB/1024),12,2)
  OUT_LINE.OUT_COUNT = CENTER('  ',7),
      RIGHT("TOTAL",8),
      LEFT("     ",6),
      RIGHT(TOT_AVAIL_MB,12),
      RIGHT(TOT_ALLOC_MB,12),
      RIGHT(PRCNT_ALC,9)
RETURN
